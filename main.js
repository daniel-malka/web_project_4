!function(){"use strict";class e{constructor(e,t,s,r,i,n){var o,a;a=()=>this._cardElement.remove(),(o="removeCard")in this?Object.defineProperty(this,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):this[o]=a,this._name=e.name,this._userId=t,this._link=e.link,this._likes=e.likes,this._ownerId=e.owner._id,this._id=e._id,this._handleCardClick=r,this._handleLikeButton=i,this.handleDeleteCard=n,this._alt="Photo of ".concat(e.name),this._templateElement=s}getOwner(){console.log(this._owner)}isLiked(){return this._likes.some((e=>e._id==this._userId))}_handleDelete(e){this.handleDeleteCard(e)}getId(){return this._id}_setEventListeners(){this._deleteCard.addEventListener("click",(()=>this._handleDelete(this._id))),this._likeCard.addEventListener("click",(()=>this._handleLikeButton(this._id))),this._galleryImg.addEventListener("click",(()=>this._handleCardClick(this._name,this._link)))}addLike(){this._likeCard.classList.add("button_liked")}removeLike(){this._likeCard.classList.remove("button_liked")}setLikes(e){this._likes=e,this.likesAmount=this._likes.length,this._likesCounter.textContent=this.likesAmount}createCard(){return this._cardElement=document.querySelector(this._templateElement).content.querySelector(".gallery__item").cloneNode(!0),this._galleryImg=this._cardElement.querySelector(".gallery__img"),this._galleryText=this._cardElement.querySelector(".desc__text"),this._deleteCard=this._cardElement.querySelector(".gallery__bin"),this._likeCard=this._cardElement.querySelector(".like__button"),this._likesCounter=this._cardElement.querySelector(".like__counter"),this._galleryText.textContent=this._name,this._galleryImg.src=this._link,this._galleryImg.alt=this._alt,this.setLikes(this._likes),this._setEventListeners(),this.isLiked()?this.addLike():this.removeLike(),this._cardElement}}function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class s{constructor(e,s){t(this,"resetValidation",(()=>{this._hideAllErrors(),this._formElement.reset(),this._disableButton()})),t(this,"enableValidation",(()=>{this._formElement.addEventListener("submit",(e=>e.preventDefault())),this._setEventListeners()})),t(this,"_setEventListeners",(()=>{this._allInputs.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButton(this._allInputs)}))}))})),t(this,"_hideAllErrors",(()=>{this._allInputs.forEach((e=>{this._hideInputError(e)}))})),t(this,"_disableButton",(()=>{const{buttonDisable:e}=this._settings;this._buttonEl.classList.add(e),this._buttonEl.disabled=!0})),t(this,"_showInputError",((e,t)=>{const{inputErrorClass:s,spanErrorClass:r}=this._settings;this._errorDynamicSpan=this._formElement.querySelector(".fieldset__error-type-".concat(e.id)),e.classList.add(s),this._errorDynamicSpan.textContent=t,this._errorDynamicSpan.classList.add(r)})),t(this,"_hideInputError",(e=>{const{inputErrorClass:t,spanErrorClass:s}=this._settings;this._errorDynamicSpan=this._formElement.querySelector(".fieldset__error-type-".concat(e.id)),e.classList.remove(t),this._errorDynamicSpan.classList.remove(s),this._errorDynamicSpan.textContent=""})),t(this,"_toggleButton",(e=>{const{buttonDisable:t}=this._settings;e.every((e=>e.validity.valid))?(this._buttonEl.classList.remove(t),this._buttonEl.disabled=!1):this._disableButton()})),t(this,"_checkInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)})),this._settings=e,this._formElement=s,this._allInputs=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._buttonEl=this._formElement.querySelector(this._settings.buttonSelector)}}function r(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class i{constructor(e){r(this,"_handleOverlay",(e=>{e.target.classList.contains("popup")&&this.close()})),r(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),this._popup=document.querySelector(e)}open(){this._popup.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popup.addEventListener("mousedown",this._handleOverlay),this._popup.querySelector(".popup__close").addEventListener("mousedown",(()=>this.close()))}}class n extends i{constructor(e,t){super(e),this._handleForm=t,this._form=this._popup.querySelector(".form"),this._inputs=Array.from(this._form.querySelectorAll(".fieldset__input"))}_getInputValues(){return this._values={},this._inputs.forEach((e=>{this._key=e.name,this._value=e.value,this._values[this._key]=this._value})),this._values}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._valuesFromForm=this._getInputValues(),this._handleForm(this._valuesFromForm),super.close()}))}setInputValues(e){this._inputs.forEach((t=>{t.value=e[t.name]}))}close(){super.close(),this._form.reset()}}const o=(e,t)=>fetch(e,t).then((e=>e.ok?e.json():Promise.reject(e.statusText))).catch((e=>{console.log(e)})),a=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}getCards(){return o(this._baseUrl+"/cards",{headers:this._headers})}getUserInfo(){return o(this._baseUrl+"/users/me",{headers:this._headers})}setUserInfo(e){let{name:t,about:s}=e;return o(this._baseUrl+"/users/me",{headers:this._headers,method:"PATCH",body:JSON.stringify({name:t,about:s})})}addCard(e){let{name:t,link:s}=e;return o(this._baseUrl+"/cards",{headers:this._headers,method:"POST",body:JSON.stringify({name:t,link:s})})}deleteCard(e){return o("".concat(this._baseUrl,"/cards/").concat(e),{headers:this._headers,method:"DELETE"})}dislikeCard(e){return o("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"DELETE"})}likeCard(e){return o("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"PUT"})}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"6efb715f-3f27-47aa-b11b-00d476bb80a2","Content-Type":"application/json"}}),l=".gallery",h=document.forms.formProfile.elements.name,_=document.forms.formProfile.elements.about,d=document.querySelector(".text__edit"),c=document.querySelector(".top__plus-box"),u={inputSelector:".fieldset__input",buttonSelector:".fieldset__button",buttonDisable:"fieldset__button_disabled",inputErrorClass:"fieldset__input_error",spanErrorClass:"fieldset__error-message-active"};let m;const p=new class extends i{setAction(e){this._submitHandler=e}setEventListeners(){this._popup.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler(),super.close()}))}}(".popup_type_card-delete");p.setEventListeners();const b=new class{constructor(e,t){this._renderer=e,this._container=document.querySelector(t)}renderInitialItems(e){e.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}((e=>{f(e)}),l),f=e=>{b.addItem(y(e))},E=new class{constructor(e){this._userName=document.querySelector(e.name),this._userAbout=document.querySelector(e.about)}getUserInfo(){return{name:this._userName.textContent,about:this._userAbout.textContent}}setUserInfo(e){let{nameInput:t,aboutInput:s}=e;this._userName.textContent=t,this._userAbout.textContent=s}}({name:".text__name",about:".text__about"});Promise.all([a.getUserInfo(),a.getCards()]).then((e=>{let[t,s]=e;m=t._id,E.setUserInfo({nameInput:t.name,aboutInput:t.about}),b.renderInitialItems(s)})).catch(console.log);const y=t=>{const s=new e(t,m,"#gallery__item",((e,t)=>{k.open(e,t)}),(e=>{s.isLiked()?a.dislikeCard(e).then((e=>{s.setLikes(e.likes),s.removeLike()})):a.likeCard(e).then((e=>{s.setLikes(e.likes),s.addLike()})).catch(console.log())}),(e=>{p.open(),p.setAction((()=>a.deleteCard(e).then((e=>{console.log("1111",e),s.removeCard()}))))}));return s.createCard()},g=new n(".popup_type_card",(e=>{a.addCard({name:e.title,link:e.link}).then((e=>{f(e,l),g.close()})).catch(console.log)})),v={formImg:"formImg",formProfile:"formProfile"};Array.from(document.querySelectorAll(".form")).forEach((e=>{const t=new s(u,e),r=e.getAttribute("name");v[r]=t,t.enableValidation()}));const k=new class extends i{open(e,t){this._image=this._popup.querySelector(".popup__img"),this._caption=this._popup.querySelector(".popup__caption"),this._caption.textContent=e,this._image.src=t,this._image.alt="Photo of ".concat(e),super.open()}}(".popup_type_zoom");k.setEventListeners();const L=new n(".popup_type_profile",(e=>{a.setUserInfo({name:e.name,about:e.about}).then((e=>{console.log(e),E.setUserInfo({nameInput:e.name,aboutInput:e.about})})).catch((e=>console.log(e,"something went wrong.. =/"))).finally((()=>{L.close()}))}));L.setEventListeners(),g.setEventListeners(),c.addEventListener("click",(()=>(v[formImg.getAttribute("name")].resetValidation(),void g.open()))),d.addEventListener("click",(()=>{v[formProfile.getAttribute("name")].resetValidation(),E.getUserInfo(),(()=>{const{name:e,about:t}=E.getUserInfo();h.value=e,_.value=t})(),L.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,