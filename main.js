!function(){"use strict";var t={};function e(t,e,s){return e in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}(function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})})(t);class s{constructor(t,s,i){e(this,"_removeCard",(()=>this._cardElement.remove())),e(this,"_toggleHeart",(t=>{t.target.classList.toggle("button_liked")})),this._title=t.title,this._link=t.link,this._alt="Photo of ".concat(t.title),this._templateElement=s,this._handleCardClick=i}_setEventListeners(){this._deleteCard.addEventListener("click",(()=>this._removeCard())),this._likeCard.addEventListener("click",(t=>this._toggleHeart(t))),this._galleryImg.addEventListener("click",(()=>this._handleCardClick(this._title,this._link)))}createCard(){return this._cardElement=document.querySelector(this._templateElement).content.querySelector(".gallery__item").cloneNode(!0),this._galleryImg=this._cardElement.querySelector(".gallery__img"),this._galleryText=this._cardElement.querySelector(".desc__text"),this._deleteCard=this._cardElement.querySelector(".gallery__bin"),this._likeCard=this._cardElement.querySelector(".desc__heart"),this._galleryImg.src=this._link,this._galleryText.textContent=this._title,this._galleryImg.alt=this._alt,this._setEventListeners(),this._cardElement}}function i(t,e,s){return e in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}class r{constructor(t,e){i(this,"resetValidation",(()=>{this._hideAllErrors(),this._formElement.reset(),this._disableButton()})),i(this,"enableValidation",(()=>{this._formElement.addEventListener("submit",(t=>t.preventDefault())),this._setEventListeners()})),i(this,"_setEventListeners",(()=>{this._allInputs.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this._toggleButton(this._allInputs)}))}))})),i(this,"_hideAllErrors",(()=>{this._allInputs.forEach((t=>{this._hideInputError(t)}))})),i(this,"_disableButton",(()=>{const{buttonDisable:t}=this._settings;this._buttonEl.classList.add(t),this._buttonEl.disabled=!0})),i(this,"_showInputError",((t,e)=>{const{inputErrorClass:s,spanErrorClass:i}=this._settings;this._errorDynamicSpan=this._formElement.querySelector(".fieldset__error-type-".concat(t.id)),t.classList.add(s),this._errorDynamicSpan.textContent=e,this._errorDynamicSpan.classList.add(i)})),i(this,"_hideInputError",(t=>{const{inputErrorClass:e,spanErrorClass:s}=this._settings;this._errorDynamicSpan=this._formElement.querySelector(".fieldset__error-type-".concat(t.id)),t.classList.remove(e),this._errorDynamicSpan.classList.remove(s),this._errorDynamicSpan.textContent=""})),i(this,"_toggleButton",(t=>{const{buttonDisable:e}=this._settings;t.every((t=>t.validity.valid))?(this._buttonEl.classList.remove(e),this._buttonEl.disabled=!1):this._disableButton()})),i(this,"_checkInputValidity",(t=>{t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)})),this._settings=t,this._formElement=e,this._allInputs=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._buttonEl=this._formElement.querySelector(this._settings.buttonSelector)}}function n(t,e,s){return e in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}class o{constructor(t){n(this,"_handleOverlay",(t=>{t.target.classList.contains("popup")&&this.close()})),n(this,"_handleEscClose",(t=>{"Escape"===t.key&&this.close()})),this._popup=document.querySelector(t)}open(){this._popup.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popup.addEventListener("mousedown",this._handleOverlay),this._popup.querySelector(".popup__close").addEventListener("mousedown",(()=>this.close()))}}class l extends o{constructor(t,e){super(t),this._handleForm=e,this._form=this._popup.querySelector(".form"),this._inputs=Array.from(this._form.querySelectorAll(".fieldset__input"))}_getInputValues(){return this._values={},this._inputs.forEach((t=>{this._key=t.name,this._value=t.value,this._values[this._key]=this._value})),this._values}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(t=>{t.preventDefault(),this._valuesFromForm=this._getInputValues(),this._handleForm(this._valuesFromForm),super.close()}))}setInputValues(t){this._inputs.forEach((e=>{e.value=t[e.name]}))}close(){super.close(),this._form.reset()}}const a=(document.forms.formProfile.elements.name,document.forms.formProfile.elements.occupation,document.querySelector(".text__edit")),c=document.querySelector(".top__plus-box"),u={inputSelector:".fieldset__input",buttonSelector:".fieldset__button",buttonDisable:"fieldset__button_disabled",inputErrorClass:"fieldset__input_error",spanErrorClass:"fieldset__error-message-active"},h=[{title:"Kenai Fjords interational Park",link:"https://images.unsplash.com/photo-1633967920376-33b2d94f091f?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80"},{title:"Yellowlinkne National Park",link:"https://images.unsplash.com/photo-1607550295261-851fa60d8ed2?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=871&q=80"},{title:"Niagara Falls",link:"https://images.unsplash.com/photo-1598402453861-4fbcbf6ced3b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1974&q=80"},{title:"Zion National Park",link:"https://images.unsplash.com/photo-1502746663084-14b59b6924f2?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80"},{title:"Kauai islands",link:"https://images.unsplash.com/photo-1638401604765-47daaa5a6c34?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=781&q=80"},{title:"Grand Canyon",link:"https://images.unsplash.com/photo-1509316785289-025f5b846b35?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=876&q=80"}];new class{constructor(t){this._baseUrl=t.baseUrl,this._headers=t.headers}getUserInfo(){return fetch(this._baseUrl+"/users/me").then}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"6efb715f-3f27-47aa-b11b-00d476bb80a2","Content-Type":"application/json"}}),t.default.getUserInfo().then((t=>{t.ok&&console.log(t)})),h.reverse();const _={formImg:"formImg",formProfile:"formProfile"},d=(t,e)=>{const i=(t=>new s(t,"#gallery__item",((t,e)=>{m.open(t,e)})).createCard())(t);y.addItem(i)};Array.from(document.querySelectorAll(".form")).forEach((t=>{const e=new r(u,t),s=t.getAttribute("name");_[s]=e,e.enableValidation()}));const p=new class{constructor(t){let{nameSelector:e,occupationSelector:s}=t;this._userName=document.querySelector(e),this._userOccupation=document.querySelector(s)}getUserInfo(){return{name:this._userName.textContent,occupation:this._userOccupation.textContent}}setUserInfo(t){this._userName.textContent=t.name,this._userOccupation.textContent=t.occupation}}({nameSelector:".text__name",occupationSelector:".text__occupation"}),m=new class extends o{open(t,e){this._image=this._popup.querySelector(".popup__img"),this._caption=this._popup.querySelector(".popup__caption"),this._caption.textContent=t,this._image.src=e,this._image.alt="Photo of ".concat(t),super.open()}}(".popup_type_zoom");m.setEventListeners();const f=new l(".popup_type_profile",(t=>{p.setUserInfo(t)}));f.setEventListeners();const b=new l(".popup_type_card",(t=>{d({title:t.title,link:t.link}),b.close()}));b.setEventListeners();const y=new class{constructor(t,e){let{items:s,renderer:i}=t;this._items=s,this._renderer=i,this._container=document.querySelector(e)}renderItems(){this._items.forEach((t=>{this._renderer(t,this._container)}))}addItem(t){this._container.prepend(t)}}({items:h,renderer:d},".gallery");y.renderItems(),c.addEventListener("click",(()=>(_[formImg.getAttribute("name")].resetValidation(),void b.open()))),a.addEventListener("click",(()=>{var t;_[formProfile.getAttribute("name")].resetValidation(),t=p.getUserInfo(),f.setInputValues(t),f.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,