!function(){"use strict";function t(t,e,s){return e in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}class e{constructor(e,s,i){t(this,"_removeCard",(()=>this._cardElement.remove())),t(this,"_toggleHeart",(t=>{t.target.classList.toggle("button_liked")})),this._title=e.title,this._link=e.link,this._alt="Photo of ".concat(e.title),this._templateElement=s,this._handleCardClick=i}_setEventListeners(){this._deleteCard.addEventListener("click",(()=>this._removeCard())),this._likeCard.addEventListener("click",(t=>this._toggleHeart(t))),this._galleryImg.addEventListener("click",(()=>this._handleCardClick(this._title,this._link)))}createCard(){return this._cardElement=document.querySelector(this._templateElement).content.querySelector(".gallery__item").cloneNode(!0),this._galleryImg=this._cardElement.querySelector(".gallery__img"),this._galleryText=this._cardElement.querySelector(".desc__text"),this._deleteCard=this._cardElement.querySelector(".gallery__bin"),this._likeCard=this._cardElement.querySelector(".desc__heart"),this._galleryImg.src=this._link,this._galleryText.textContent=this._title,this._galleryImg.alt=this._alt,this._setEventListeners(),this._cardElement}}function s(t,e,s){return e in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}class i{constructor(t,e){s(this,"resetValidation",(()=>{this._hideAllErrors(),this._formElement.reset(),this._disableButton()})),s(this,"enableValidation",(()=>{this._formElement.addEventListener("submit",(t=>t.preventDefault())),this._setEventListeners()})),s(this,"_setEventListeners",(()=>{this._allInputs.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this._toggleButton(this._allInputs)}))}))})),s(this,"_hideAllErrors",(()=>{this._allInputs.forEach((t=>{this._hideInputError(t)}))})),s(this,"_disableButton",(()=>{const{buttonDisable:t}=this._settings;this._buttonEl.classList.add(t),this._buttonEl.disabled=!0})),s(this,"_showInputError",((t,e)=>{const{inputErrorClass:s,spanErrorClass:i}=this._settings;this._errorDynamicSpan=this._formElement.querySelector(".fieldset__error-type-".concat(t.id)),t.classList.add(s),this._errorDynamicSpan.textContent=e,this._errorDynamicSpan.classList.add(i)})),s(this,"_hideInputError",(t=>{const{inputErrorClass:e,spanErrorClass:s}=this._settings;this._errorDynamicSpan=this._formElement.querySelector(".fieldset__error-type-".concat(t.id)),t.classList.remove(e),this._errorDynamicSpan.classList.remove(s),this._errorDynamicSpan.textContent=""})),s(this,"_toggleButton",(t=>{const{buttonDisable:e}=this._settings;t.every((t=>t.validity.valid))?(this._buttonEl.classList.remove(e),this._buttonEl.disabled=!1):this._disableButton()})),s(this,"_checkInputValidity",(t=>{t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)})),this._settings=t,this._formElement=e,this._allInputs=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._buttonEl=this._formElement.querySelector(this._settings.buttonSelector)}}function r(t,e,s){return e in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}class n{constructor(t){r(this,"_handleOverlay",(t=>{t.target.classList.contains("popup")&&this.close()})),r(this,"_handleEscClose",(t=>{"Escape"===t.key&&this.close()})),this._popup=document.querySelector(t)}open(){this._popup.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popup.addEventListener("mousedown",this._handleOverlay),this._popup.querySelector(".popup__close").addEventListener("mousedown",(()=>this.close()))}}class o extends n{constructor(t,e){super(t),this._handleForm=e,this._form=this._popup.querySelector(".form"),this._inputs=Array.from(this._form.querySelectorAll(".fieldset__input"))}_getInputValues(){return this._values={},this._inputs.forEach((t=>{this._key=t.name,this._value=t.value,this._values[this._key]=this._value})),this._values}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(t=>{t.preventDefault(),this._valuesFromForm=this._getInputValues(),this._handleForm(this._valuesFromForm),super.close()}))}setInputValues(t){this._inputs.forEach((e=>{e.value=t[e.name]}))}close(){super.close(),this._form.reset()}}const l=(document.forms.formProfile.elements.name,document.forms.formProfile.elements.occupation,document.querySelector(".text__edit")),a=document.querySelector(".top__plus-box"),c={inputSelector:".fieldset__input",buttonSelector:".fieldset__button",buttonDisable:"fieldset__button_disabled",inputErrorClass:"fieldset__input_error",spanErrorClass:"fieldset__error-message-active"},u=[{title:"Kenai Fjords interational Park",link:"https://images.unsplash.com/photo-1633967920376-33b2d94f091f?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80"},{title:"Yellowlinkne National Park",link:"https://images.unsplash.com/photo-1607550295261-851fa60d8ed2?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=871&q=80"},{title:"Niagara Falls",link:"https://images.unsplash.com/photo-1598402453861-4fbcbf6ced3b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1974&q=80"},{title:"Zion National Park",link:"https://images.unsplash.com/photo-1502746663084-14b59b6924f2?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80"},{title:"Kauai islands",link:"https://images.unsplash.com/photo-1638401604765-47daaa5a6c34?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=781&q=80"},{title:"Grand Canyon",link:"https://images.unsplash.com/photo-1509316785289-025f5b846b35?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=876&q=80"}];u.reverse();const _={formImg:"formImg",formProfile:"formProfile"},h=(t,s)=>{const i=(t=>new e(t,"#gallery__item",((t,e)=>{d.open(t,e)})).createCard())(t);b.addItem(i)};Array.from(document.querySelectorAll(".form")).forEach((t=>{const e=new i(c,t),s=t.getAttribute("name");_[s]=e,e.enableValidation()}));const p=new class{constructor(t){let{nameSelector:e,occupationSelector:s}=t;this._userName=document.querySelector(e),this._userOccupation=document.querySelector(s)}getUserInfo(){return{name:this._userName.textContent,occupation:this._userOccupation.textContent}}setUserInfo(t){this._userName.textContent=t.name,this._userOccupation.textContent=t.occupation}}({nameSelector:".text__name",occupationSelector:".text__occupation"}),d=new class extends n{open(t,e){this._image=this._popup.querySelector(".popup__img"),this._caption=this._popup.querySelector(".popup__caption"),this._caption.textContent=t,this._image.src=e,this._image.alt="Photo of ".concat(t),super.open()}}(".popup_type_zoom");d.setEventListeners();const m=new o(".popup_type_profile",(t=>{p.setUserInfo(t)}));m.setEventListeners();const f=new o(".popup_type_card",(t=>{h({title:t.title,link:t.link}),f.close()}));f.setEventListeners();const b=new class{constructor(t,e){let{items:s,renderer:i}=t;this._items=s,this._renderer=i,this._container=document.querySelector(e)}renderItems(){this._items.forEach((t=>{this._renderer(t,this._container)}))}addItem(t){this._container.prepend(t)}}({items:u,renderer:h},".gallery");b.renderItems(),a.addEventListener("click",(()=>(_[formImg.getAttribute("name")].resetValidation(),void f.open()))),l.addEventListener("click",(()=>{var t;_[formProfile.getAttribute("name")].resetValidation(),t=p.getUserInfo(),m.setInputValues(t),m.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,